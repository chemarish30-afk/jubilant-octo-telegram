name: Deploy Backend

on:
  push:
    branches: [ main, master ]
    paths:
      - 'app.py'
      - 'requirements.txt'
      - 'config.py'
      - '.github/workflows/deploy-backend.yml'

jobs:
  deploy-backend:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Run tests
      run: |
        python -c "
        from app import app, db
        with app.app_context():
            db.create_all()
            print('Database tests passed')
        "
        
    # Example: Deploy to Railway (uncomment and configure as needed)
    # - name: Deploy to Railway
    #   uses: bervProject/railway-deploy@v1.0.0
    #   with:
    #     railway_token: ${{ secrets.RAILWAY_TOKEN }}
    #     service: ${{ secrets.RAILWAY_SERVICE }}
    #     directory: .
    
    # Example: Deploy to Render (uncomment and configure as needed)
    # - name: Deploy to Render
    #   run: |
    #     curl -X POST "https://api.render.com/deploy/srv-${{ secrets.RENDER_SERVICE_ID }}?key=${{ secrets.RENDER_API_KEY }}"
    
    # Example: Deploy to Heroku (uncomment and configure as needed)
    # - name: Deploy to Heroku
    #   uses: akhileshns/heroku-deploy@v3.12.14
    #   with:
    #     heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
    #     heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}
    #     heroku_email: ${{ secrets.HEROKU_EMAIL }}
    #     appdir: "."
    
    - name: Notify deployment status
      run: |
        echo "Backend deployment completed"
        echo "Update your frontend configuration with the new backend URL"
